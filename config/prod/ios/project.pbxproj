// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 54;
	objects = {

/* Begin PBXBuildFile section */
		00E356F31AD99517003FC87E /* PaaveTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* PaaveTests.m */; };
		13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };
		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		1892A3CD27E9AAA800F8801C /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 1892A3CC27E9AAA700F8801C /* GoogleService-Info.plist */; };
		2C32618B39B0456286B20234 /* Roboto-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 7486469EC8FD4DEB8E5E9AB0 /* Roboto-Light.ttf */; };
		30CD3937B9F84104A9DF2F57 /* DINOT-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 333A03AB28714B50AEECCA00 /* DINOT-Medium.ttf */; };
		4849F964F6C04B7BA4884DA3 /* Roboto-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8873DE8D7457454D98A06802 /* Roboto-Bold.ttf */; };
		5A200BE843984192B5661B94 /* Roboto-Thin.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 433903D77F784B0E815182E9 /* Roboto-Thin.ttf */; };
		62CF976D06AC407BA6F82C85 /* Roboto-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E55034E98D0C453CBE5579A8 /* Roboto-BoldItalic.ttf */; };
		67A77C89B869460CA087B4F7 /* Roboto-ThinItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 764E4890399B4DE08DAAF2DC /* Roboto-ThinItalic.ttf */; };
		685CD66364904DC6A5463B49 /* DINOT-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = EF15BAB184E04B4B9BEA22C2 /* DINOT-Bold.ttf */; };
		6D3716D3E2FE470C9E3008FC /* Roboto-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 10383544534B421D90FD6948 /* Roboto-Regular.ttf */; };
		6E58B542DAFB473AA2406B7F /* Roboto-LightItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 8932F4247CB4482C81B198A8 /* Roboto-LightItalic.ttf */; };
		798E4BC5DBA14DEBB0EEDC51 /* Roboto-Black.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 13ED956F9F4B4DA4987F01AE /* Roboto-Black.ttf */; };
		7DAF52B00574433F8666B89E /* Roboto-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3190A00B0DBB47C2B4DB9487 /* Roboto-Medium.ttf */; };
		8E4B6D0332E44DC9A2F2C56F /* DINOT-Light.ttf in Resources */ = {isa = PBXBuildFile; fileRef = C30CB65C2C81482B8D0A8E18 /* DINOT-Light.ttf */; };
		9063D8F629EF7E390085E91B /* Paave-Icons.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 9063D8F529EF7E390085E91B /* Paave-Icons.ttf */; };
		A1DEFC3B27609CF200677D6E /* NotificationService.m in Sources */ = {isa = PBXBuildFile; fileRef = A1DEFC3A27609CF200677D6E /* NotificationService.m */; };
		A1DEFC3F27609CF200677D6E /* OneSignalNotificationServiceExtension.appex in Embed App Extensions */ = {isa = PBXBuildFile; fileRef = A1DEFC3727609CF200677D6E /* OneSignalNotificationServiceExtension.appex */; settings = {ATTRIBUTES = (RemoveHeadersOnCopy, ); }; };
		A7278AA27D3348B1A8510827 /* Dinot Font.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E84CB96DBBFF452C89FA4217 /* Dinot Font.ttf */; };
		B5398925DEDCC5D94C79F206 /* libPods-Paave.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 7606D45CB41D8CDF7CB005B4 /* libPods-Paave.a */; };
		B8BA5D80BB4D319593FE6801 /* libPods-Paave-PaaveTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4B6BD3AD5DAAA986F002AB9C /* libPods-Paave-PaaveTests.a */; };
		BA74FA0473B735430B89DD8E /* libPods-OneSignalNotificationServiceExtension.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 64B13FD143A055669FC7A851 /* libPods-OneSignalNotificationServiceExtension.a */; };
		BBFDE6EA0AB4442E8EE1B11B /* Roboto-MediumItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = CFDA12AFF23C44D2A68DEE95 /* Roboto-MediumItalic.ttf */; };
		BC827C7C7FF745E9A5F1F20B /* Roboto-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 02822084E3804ACE9527BDFC /* Roboto-Italic.ttf */; };
		BFB9DF58DD53419B9F7DBE65 /* Roboto-BlackItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 2C243A1AEFA34D0CA9745133 /* Roboto-BlackItalic.ttf */; };
		D6E903C675FE412595133C1D /* DINOT-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = F618A48DEFF647AAAD6D85DD /* DINOT-Regular.ttf */; };
		DF85AF522B04BD0E00A90CE8 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = DF85AF512B04BD0E00A90CE8 /* LaunchScreen.storyboard */; };
		F65AA88C28CF117500E8306A /* EkycManager.m in Sources */ = {isa = PBXBuildFile; fileRef = F65AA88B28CF117500E8306A /* EkycManager.m */; };
		F65AA88F28CF11B200E8306A /* Counter.swift in Sources */ = {isa = PBXBuildFile; fileRef = F65AA88E28CF11B200E8306A /* Counter.swift */; };
		F6C29A2628D95EE000ABE119 /* FinalSDK.xcframework in Frameworks */ = {isa = PBXBuildFile; fileRef = F6C29A2228D8506B00ABE119 /* FinalSDK.xcframework */; };
		F6C29A2728D95EE000ABE119 /* FinalSDK.xcframework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = F6C29A2228D8506B00ABE119 /* FinalSDK.xcframework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		00E356F41AD99517003FC87E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 13B07F861A680F5B00A75B9A;
			remoteInfo = Paave;
		};
		A1DEFC3D27609CF200677D6E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A1DEFC3627609CF200677D6E;
			remoteInfo = OneSignalNotificationServiceExtension;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		A1DEFC4327609CF200677D6E /* Embed App Extensions */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 13;
			files = (
				A1DEFC3F27609CF200677D6E /* OneSignalNotificationServiceExtension.appex in Embed App Extensions */,
			);
			name = "Embed App Extensions";
			runOnlyForDeploymentPostprocessing = 0;
		};
		F6C29A2828D95EE100ABE119 /* Embed Frameworks */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 10;
			files = (
				F6C29A2728D95EE000ABE119 /* FinalSDK.xcframework in Embed Frameworks */,
			);
			name = "Embed Frameworks";
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		00E356EE1AD99517003FC87E /* PaaveTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = PaaveTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		00E356F21AD99517003FC87E /* PaaveTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = PaaveTests.m; sourceTree = "<group>"; };
		01DDC0E08F5963FADD2243CB /* Pods-Paave.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Paave.debug.xcconfig"; path = "Target Support Files/Pods-Paave/Pods-Paave.debug.xcconfig"; sourceTree = "<group>"; };
		02822084E3804ACE9527BDFC /* Roboto-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-Italic.ttf"; path = "../assets/fonts/Roboto-Italic.ttf"; sourceTree = "<group>"; };
		06CB76C09ECA438C98F27AEB /* Entypo.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Entypo.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Entypo.ttf"; sourceTree = "<group>"; };
		0F030E647EE4480CBB9CE7D9 /* Foundation.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Foundation.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Foundation.ttf"; sourceTree = "<group>"; };
		10383544534B421D90FD6948 /* Roboto-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-Regular.ttf"; path = "../assets/fonts/Roboto-Regular.ttf"; sourceTree = "<group>"; };
		13B07F961A680F5B00A75B9A /* Paave.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Paave.app; sourceTree = BUILT_PRODUCTS_DIR; };
		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = Paave/AppDelegate.h; sourceTree = "<group>"; };
		13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = Paave/AppDelegate.mm; sourceTree = "<group>"; };
		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = Paave/Images.xcassets; sourceTree = "<group>"; };
		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = Paave/Info.plist; sourceTree = "<group>"; };
		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = Paave/main.m; sourceTree = "<group>"; };
		13ED956F9F4B4DA4987F01AE /* Roboto-Black.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-Black.ttf"; path = "../assets/fonts/Roboto-Black.ttf"; sourceTree = "<group>"; };
		1855430C2F0642AB9C7F4525 /* SimpleLineIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = SimpleLineIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf"; sourceTree = "<group>"; };
		1892A3CC27E9AAA700F8801C /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "Paave/GoogleService-Info.plist"; sourceTree = "<group>"; };
		19680C1BC97A4F5895BEDBDD /* FontAwesome5_Solid.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Solid.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf"; sourceTree = "<group>"; };
		1A5E4724746D4CAAAEB6DD0A /* Feather.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Feather.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Feather.ttf"; sourceTree = "<group>"; };
		251343545D3943FD903056EA /* Zocial.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Zocial.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Zocial.ttf"; sourceTree = "<group>"; };
		2C243A1AEFA34D0CA9745133 /* Roboto-BlackItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-BlackItalic.ttf"; path = "../assets/fonts/Roboto-BlackItalic.ttf"; sourceTree = "<group>"; };
		3190A00B0DBB47C2B4DB9487 /* Roboto-Medium.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-Medium.ttf"; path = "../assets/fonts/Roboto-Medium.ttf"; sourceTree = "<group>"; };
		333A03AB28714B50AEECCA00 /* DINOT-Medium.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DINOT-Medium.ttf"; path = "../assets/fonts/DINOT-Medium.ttf"; sourceTree = "<group>"; };
		390AF8E1F0B74A33BC767FD9 /* Ionicons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Ionicons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf"; sourceTree = "<group>"; };
		433903D77F784B0E815182E9 /* Roboto-Thin.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-Thin.ttf"; path = "../assets/fonts/Roboto-Thin.ttf"; sourceTree = "<group>"; };
		49C3DF51FDF64697A5AC509A /* MaterialIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = MaterialIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf"; sourceTree = "<group>"; };
		4B6BD3AD5DAAA986F002AB9C /* libPods-Paave-PaaveTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Paave-PaaveTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		4D8ABE15D5574A498BE323A8 /* Pods-Paave.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Paave.release.xcconfig"; path = "Target Support Files/Pods-Paave/Pods-Paave.release.xcconfig"; sourceTree = "<group>"; };
		5177F88BC1664F238DC42F8B /* Fontisto.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Fontisto.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf"; sourceTree = "<group>"; };
		5824C9C44D8A4915914AE3AA /* AntDesign.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = AntDesign.ttf; path = "../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf"; sourceTree = "<group>"; };
		64B13FD143A055669FC7A851 /* libPods-OneSignalNotificationServiceExtension.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-OneSignalNotificationServiceExtension.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		7486469EC8FD4DEB8E5E9AB0 /* Roboto-Light.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-Light.ttf"; path = "../assets/fonts/Roboto-Light.ttf"; sourceTree = "<group>"; };
		7606D45CB41D8CDF7CB005B4 /* libPods-Paave.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-Paave.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		764E4890399B4DE08DAAF2DC /* Roboto-ThinItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-ThinItalic.ttf"; path = "../assets/fonts/Roboto-ThinItalic.ttf"; sourceTree = "<group>"; };
		7A55A4D0BDE84F1094EAEE53 /* MaterialCommunityIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = MaterialCommunityIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf"; sourceTree = "<group>"; };
		8873DE8D7457454D98A06802 /* Roboto-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-Bold.ttf"; path = "../assets/fonts/Roboto-Bold.ttf"; sourceTree = "<group>"; };
		8932F4247CB4482C81B198A8 /* Roboto-LightItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-LightItalic.ttf"; path = "../assets/fonts/Roboto-LightItalic.ttf"; sourceTree = "<group>"; };
		9063D8F529EF7E390085E91B /* Paave-Icons.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; name = "Paave-Icons.ttf"; path = "../assets/fonts/Paave-Icons.ttf"; sourceTree = "<group>"; };
		9DF5EF32B72A7DBF60467841 /* Pods-OneSignalNotificationServiceExtension.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-OneSignalNotificationServiceExtension.release.xcconfig"; path = "Target Support Files/Pods-OneSignalNotificationServiceExtension/Pods-OneSignalNotificationServiceExtension.release.xcconfig"; sourceTree = "<group>"; };
		A1DEFC3227609CB800677D6E /* Paave.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = Paave.entitlements; path = Paave/Paave.entitlements; sourceTree = "<group>"; };
		A1DEFC3727609CF200677D6E /* OneSignalNotificationServiceExtension.appex */ = {isa = PBXFileReference; explicitFileType = "wrapper.app-extension"; includeInIndex = 0; path = OneSignalNotificationServiceExtension.appex; sourceTree = BUILT_PRODUCTS_DIR; };
		A1DEFC3927609CF200677D6E /* NotificationService.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = NotificationService.h; sourceTree = "<group>"; };
		A1DEFC3A27609CF200677D6E /* NotificationService.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = NotificationService.m; sourceTree = "<group>"; };
		A1DEFC3C27609CF200677D6E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		A1DEFC4427609DC500677D6E /* OneSignalNotificationServiceExtension.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = OneSignalNotificationServiceExtension.entitlements; sourceTree = "<group>"; };
		B756B496E9D74513A54344DB /* EvilIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = EvilIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf"; sourceTree = "<group>"; };
		BB903526FEF04AF5B159BDEB /* FontAwesome5_Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Regular.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf"; sourceTree = "<group>"; };
		C30CB65C2C81482B8D0A8E18 /* DINOT-Light.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DINOT-Light.ttf"; path = "../assets/fonts/DINOT-Light.ttf"; sourceTree = "<group>"; };
		CADC671212F091F439B36929 /* Pods-Paave-PaaveTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Paave-PaaveTests.debug.xcconfig"; path = "Target Support Files/Pods-Paave-PaaveTests/Pods-Paave-PaaveTests.debug.xcconfig"; sourceTree = "<group>"; };
		CFDA12AFF23C44D2A68DEE95 /* Roboto-MediumItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-MediumItalic.ttf"; path = "../assets/fonts/Roboto-MediumItalic.ttf"; sourceTree = "<group>"; };
		D662451C30502204B58DC27C /* Pods-OneSignalNotificationServiceExtension.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-OneSignalNotificationServiceExtension.debug.xcconfig"; path = "Target Support Files/Pods-OneSignalNotificationServiceExtension/Pods-OneSignalNotificationServiceExtension.debug.xcconfig"; sourceTree = "<group>"; };
		DF85AF512B04BD0E00A90CE8 /* LaunchScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = LaunchScreen.storyboard; path = Paave/LaunchScreen.storyboard; sourceTree = "<group>"; };
		E289D25A1D100E628A7ECFAA /* Pods-Paave-PaaveTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-Paave-PaaveTests.release.xcconfig"; path = "Target Support Files/Pods-Paave-PaaveTests/Pods-Paave-PaaveTests.release.xcconfig"; sourceTree = "<group>"; };
		E55034E98D0C453CBE5579A8 /* Roboto-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Roboto-BoldItalic.ttf"; path = "../assets/fonts/Roboto-BoldItalic.ttf"; sourceTree = "<group>"; };
		E84CB96DBBFF452C89FA4217 /* Dinot Font.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Dinot Font.ttf"; path = "../assets/fonts/Dinot Font.ttf"; sourceTree = "<group>"; };
		E95F33DBF12647109F636690 /* FontAwesome.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf"; sourceTree = "<group>"; };
		E96A06093F244245A0A992E3 /* Octicons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Octicons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Octicons.ttf"; sourceTree = "<group>"; };
		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
		EF15BAB184E04B4B9BEA22C2 /* DINOT-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DINOT-Bold.ttf"; path = "../assets/fonts/DINOT-Bold.ttf"; sourceTree = "<group>"; };
		F618A48DEFF647AAAD6D85DD /* DINOT-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DINOT-Regular.ttf"; path = "../assets/fonts/DINOT-Regular.ttf"; sourceTree = "<group>"; };
		F65AA88B28CF117500E8306A /* EkycManager.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = EkycManager.m; sourceTree = "<group>"; };
		F65AA88D28CF11B100E8306A /* Paave-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "Paave-Bridging-Header.h"; sourceTree = "<group>"; };
		F65AA88E28CF11B200E8306A /* Counter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Counter.swift; sourceTree = "<group>"; };
		F65AAF8479D747F28F9E3974 /* FontAwesome5_Brands.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Brands.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf"; sourceTree = "<group>"; };
		F6C29A2228D8506B00ABE119 /* FinalSDK.xcframework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.xcframework; path = FinalSDK.xcframework; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		00E356EB1AD99517003FC87E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B8BA5D80BB4D319593FE6801 /* libPods-Paave-PaaveTests.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F8C1A680F5B00A75B9A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B5398925DEDCC5D94C79F206 /* libPods-Paave.a in Frameworks */,
				F6C29A2628D95EE000ABE119 /* FinalSDK.xcframework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A1DEFC3427609CF200677D6E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				BA74FA0473B735430B89DD8E /* libPods-OneSignalNotificationServiceExtension.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		00E356EF1AD99517003FC87E /* PaaveTests */ = {
			isa = PBXGroup;
			children = (
				00E356F21AD99517003FC87E /* PaaveTests.m */,
				00E356F01AD99517003FC87E /* Supporting Files */,
			);
			path = PaaveTests;
			sourceTree = "<group>";
		};
		00E356F01AD99517003FC87E /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				00E356F11AD99517003FC87E /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		13B07FAE1A68108700A75B9A /* Paave */ = {
			isa = PBXGroup;
			children = (
				F6C29A2128D8506B00ABE119 /* Sdks */,
				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
				13B07FB01A68108700A75B9A /* AppDelegate.mm */,
				13B07FB71A68108700A75B9A /* main.m */,
				13B07FB51A68108700A75B9A /* Images.xcassets */,
				A1DEFC3227609CB800677D6E /* Paave.entitlements */,
				13B07FB61A68108700A75B9A /* Info.plist */,
				DF85AF512B04BD0E00A90CE8 /* LaunchScreen.storyboard */,
				1892A3CC27E9AAA700F8801C /* GoogleService-Info.plist */,
				F65AA88B28CF117500E8306A /* EkycManager.m */,
				F65AA88E28CF11B200E8306A /* Counter.swift */,
				F65AA88D28CF11B100E8306A /* Paave-Bridging-Header.h */,
			);
			name = Paave;
			sourceTree = "<group>";
		};
		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
				64B13FD143A055669FC7A851 /* libPods-OneSignalNotificationServiceExtension.a */,
				7606D45CB41D8CDF7CB005B4 /* libPods-Paave.a */,
				4B6BD3AD5DAAA986F002AB9C /* libPods-Paave-PaaveTests.a */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		2FC8733CACA64EAE9B8BFB37 /* Resources */ = {
			isa = PBXGroup;
			children = (
				E84CB96DBBFF452C89FA4217 /* Dinot Font.ttf */,
				13ED956F9F4B4DA4987F01AE /* Roboto-Black.ttf */,
				2C243A1AEFA34D0CA9745133 /* Roboto-BlackItalic.ttf */,
				8873DE8D7457454D98A06802 /* Roboto-Bold.ttf */,
				E55034E98D0C453CBE5579A8 /* Roboto-BoldItalic.ttf */,
				02822084E3804ACE9527BDFC /* Roboto-Italic.ttf */,
				7486469EC8FD4DEB8E5E9AB0 /* Roboto-Light.ttf */,
				8932F4247CB4482C81B198A8 /* Roboto-LightItalic.ttf */,
				3190A00B0DBB47C2B4DB9487 /* Roboto-Medium.ttf */,
				CFDA12AFF23C44D2A68DEE95 /* Roboto-MediumItalic.ttf */,
				10383544534B421D90FD6948 /* Roboto-Regular.ttf */,
				433903D77F784B0E815182E9 /* Roboto-Thin.ttf */,
				764E4890399B4DE08DAAF2DC /* Roboto-ThinItalic.ttf */,
				5824C9C44D8A4915914AE3AA /* AntDesign.ttf */,
				06CB76C09ECA438C98F27AEB /* Entypo.ttf */,
				B756B496E9D74513A54344DB /* EvilIcons.ttf */,
				1A5E4724746D4CAAAEB6DD0A /* Feather.ttf */,
				E95F33DBF12647109F636690 /* FontAwesome.ttf */,
				F65AAF8479D747F28F9E3974 /* FontAwesome5_Brands.ttf */,
				BB903526FEF04AF5B159BDEB /* FontAwesome5_Regular.ttf */,
				19680C1BC97A4F5895BEDBDD /* FontAwesome5_Solid.ttf */,
				5177F88BC1664F238DC42F8B /* Fontisto.ttf */,
				0F030E647EE4480CBB9CE7D9 /* Foundation.ttf */,
				390AF8E1F0B74A33BC767FD9 /* Ionicons.ttf */,
				9063D8F529EF7E390085E91B /* Paave-Icons.ttf */,
				7A55A4D0BDE84F1094EAEE53 /* MaterialCommunityIcons.ttf */,
				49C3DF51FDF64697A5AC509A /* MaterialIcons.ttf */,
				E96A06093F244245A0A992E3 /* Octicons.ttf */,
				1855430C2F0642AB9C7F4525 /* SimpleLineIcons.ttf */,
				251343545D3943FD903056EA /* Zocial.ttf */,
				EF15BAB184E04B4B9BEA22C2 /* DINOT-Bold.ttf */,
				C30CB65C2C81482B8D0A8E18 /* DINOT-Light.ttf */,
				F618A48DEFF647AAAD6D85DD /* DINOT-Regular.ttf */,
				333A03AB28714B50AEECCA00 /* DINOT-Medium.ttf */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
			isa = PBXGroup;
			children = (
			);
			name = Libraries;
			sourceTree = "<group>";
		};
		83CBB9F61A601CBA00E9B192 = {
			isa = PBXGroup;
			children = (
				13B07FAE1A68108700A75B9A /* Paave */,
				00E356EF1AD99517003FC87E /* PaaveTests */,
				A1DEFC3827609CF200677D6E /* OneSignalNotificationServiceExtension */,
				832341AE1AAA6A7D00B99B32 /* Libraries */,
				83CBBA001A601CBA00E9B192 /* Products */,
				2D16E6871FA4F8E400B85C8A /* Frameworks */,
				E233CBF5F47BEE60B243DCF8 /* Pods */,
				2FC8733CACA64EAE9B8BFB37 /* Resources */,
			);
			indentWidth = 2;
			sourceTree = "<group>";
			tabWidth = 2;
			usesTabs = 0;
		};
		83CBBA001A601CBA00E9B192 /* Products */ = {
			isa = PBXGroup;
			children = (
				13B07F961A680F5B00A75B9A /* Paave.app */,
				00E356EE1AD99517003FC87E /* PaaveTests.xctest */,
				A1DEFC3727609CF200677D6E /* OneSignalNotificationServiceExtension.appex */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		A1DEFC3827609CF200677D6E /* OneSignalNotificationServiceExtension */ = {
			isa = PBXGroup;
			children = (
				A1DEFC4427609DC500677D6E /* OneSignalNotificationServiceExtension.entitlements */,
				A1DEFC3927609CF200677D6E /* NotificationService.h */,
				A1DEFC3A27609CF200677D6E /* NotificationService.m */,
				A1DEFC3C27609CF200677D6E /* Info.plist */,
			);
			path = OneSignalNotificationServiceExtension;
			sourceTree = "<group>";
		};
		E233CBF5F47BEE60B243DCF8 /* Pods */ = {
			isa = PBXGroup;
			children = (
				D662451C30502204B58DC27C /* Pods-OneSignalNotificationServiceExtension.debug.xcconfig */,
				9DF5EF32B72A7DBF60467841 /* Pods-OneSignalNotificationServiceExtension.release.xcconfig */,
				01DDC0E08F5963FADD2243CB /* Pods-Paave.debug.xcconfig */,
				4D8ABE15D5574A498BE323A8 /* Pods-Paave.release.xcconfig */,
				CADC671212F091F439B36929 /* Pods-Paave-PaaveTests.debug.xcconfig */,
				E289D25A1D100E628A7ECFAA /* Pods-Paave-PaaveTests.release.xcconfig */,
			);
			path = Pods;
			sourceTree = "<group>";
		};
		F6C29A2128D8506B00ABE119 /* Sdks */ = {
			isa = PBXGroup;
			children = (
				F6C29A2228D8506B00ABE119 /* FinalSDK.xcframework */,
			);
			name = Sdks;
			path = Paave/Sdks;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		00E356ED1AD99517003FC87E /* PaaveTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "PaaveTests" */;
			buildPhases = (
				A130D646172E58E1D159D8F2 /* [CP] Check Pods Manifest.lock */,
				00E356EA1AD99517003FC87E /* Sources */,
				00E356EB1AD99517003FC87E /* Frameworks */,
				00E356EC1AD99517003FC87E /* Resources */,
				077E01280D4B4AD18B2E1770 /* [CP] Embed Pods Frameworks */,
				4E62BDF20514810D028A5FBF /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
				00E356F51AD99517003FC87E /* PBXTargetDependency */,
			);
			name = PaaveTests;
			productName = PaaveTests;
			productReference = 00E356EE1AD99517003FC87E /* PaaveTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		13B07F861A680F5B00A75B9A /* Paave */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "Paave" */;
			buildPhases = (
				3E482C27206C4DEF2FE45063 /* [CP] Check Pods Manifest.lock */,
				5EA39ADA2A093D9A00507564 /* Download Version and Build info */,
				FD10A7F022414F080027D42C /* Start Packager */,
				13B07F871A680F5B00A75B9A /* Sources */,
				13B07F8C1A680F5B00A75B9A /* Frameworks */,
				13B07F8E1A680F5B00A75B9A /* Resources */,
				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
				C8AC78B0264D0F9F6F6D630E /* [CP] Embed Pods Frameworks */,
				ADC9DDC32298B72B3CF5DC8E /* [CP] Copy Pods Resources */,
				A1DEFC4327609CF200677D6E /* Embed App Extensions */,
				F6C29A2828D95EE100ABE119 /* Embed Frameworks */,
				5EFA19F0288A4D0F00C43EAD /* Update Version and Build Number */,
				6F7ED0096C674735A1007522 /* Upload Debug Symbols to Sentry */,
				5C27A227A87AF0EC821D454F /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
				A1DEFC3E27609CF200677D6E /* PBXTargetDependency */,
			);
			name = Paave;
			productName = Paave;
			productReference = 13B07F961A680F5B00A75B9A /* Paave.app */;
			productType = "com.apple.product-type.application";
		};
		A1DEFC3627609CF200677D6E /* OneSignalNotificationServiceExtension */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A1DEFC4027609CF200677D6E /* Build configuration list for PBXNativeTarget "OneSignalNotificationServiceExtension" */;
			buildPhases = (
				9E93097001F4F6216EA34858 /* [CP] Check Pods Manifest.lock */,
				A1DEFC3327609CF200677D6E /* Sources */,
				A1DEFC3427609CF200677D6E /* Frameworks */,
				A1DEFC3527609CF200677D6E /* Resources */,
				5EFA19EF288A3FC500C43EAD /* Update Version and Build Number - OneSignal */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = OneSignalNotificationServiceExtension;
			productName = OneSignalNotificationServiceExtension;
			productReference = A1DEFC3727609CF200677D6E /* OneSignalNotificationServiceExtension.appex */;
			productType = "com.apple.product-type.app-extension";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		83CBB9F71A601CBA00E9B192 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1210;
				TargetAttributes = {
					00E356ED1AD99517003FC87E = {
						CreatedOnToolsVersion = 6.2;
						TestTargetID = 13B07F861A680F5B00A75B9A;
					};
					13B07F861A680F5B00A75B9A = {
						LastSwiftMigration = 1340;
					};
					A1DEFC3627609CF200677D6E = {
						CreatedOnToolsVersion = 13.1;
					};
				};
			};
			buildConfigurationList = 83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "Paave" */;
			compatibilityVersion = "Xcode 12.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 83CBB9F61A601CBA00E9B192;
			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				13B07F861A680F5B00A75B9A /* Paave */,
				00E356ED1AD99517003FC87E /* PaaveTests */,
				A1DEFC3627609CF200677D6E /* OneSignalNotificationServiceExtension */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		00E356EC1AD99517003FC87E /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F8E1A680F5B00A75B9A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
				1892A3CD27E9AAA800F8801C /* GoogleService-Info.plist in Resources */,
				A7278AA27D3348B1A8510827 /* Dinot Font.ttf in Resources */,
				798E4BC5DBA14DEBB0EEDC51 /* Roboto-Black.ttf in Resources */,
				BFB9DF58DD53419B9F7DBE65 /* Roboto-BlackItalic.ttf in Resources */,
				4849F964F6C04B7BA4884DA3 /* Roboto-Bold.ttf in Resources */,
				62CF976D06AC407BA6F82C85 /* Roboto-BoldItalic.ttf in Resources */,
				BC827C7C7FF745E9A5F1F20B /* Roboto-Italic.ttf in Resources */,
				2C32618B39B0456286B20234 /* Roboto-Light.ttf in Resources */,
				6E58B542DAFB473AA2406B7F /* Roboto-LightItalic.ttf in Resources */,
				7DAF52B00574433F8666B89E /* Roboto-Medium.ttf in Resources */,
				BBFDE6EA0AB4442E8EE1B11B /* Roboto-MediumItalic.ttf in Resources */,
				6D3716D3E2FE470C9E3008FC /* Roboto-Regular.ttf in Resources */,
				5A200BE843984192B5661B94 /* Roboto-Thin.ttf in Resources */,
				67A77C89B869460CA087B4F7 /* Roboto-ThinItalic.ttf in Resources */,
				685CD66364904DC6A5463B49 /* DINOT-Bold.ttf in Resources */,
				8E4B6D0332E44DC9A2F2C56F /* DINOT-Light.ttf in Resources */,
				D6E903C675FE412595133C1D /* DINOT-Regular.ttf in Resources */,
				DF85AF522B04BD0E00A90CE8 /* LaunchScreen.storyboard in Resources */,
				30CD3937B9F84104A9DF2F57 /* DINOT-Medium.ttf in Resources */,
				9063D8F629EF7E390085E91B /* Paave-Icons.ttf in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A1DEFC3527609CF200677D6E /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 12;
			files = (
			);
			inputPaths = (
				"$(SRCROOT)/.xcode.env.local",
				"$(SRCROOT)/.xcode.env",
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export SENTRY_PROPERTIES=sentry.properties\nset -e\n\nWITH_ENVIRONMENT=\"../node_modules/react-native/scripts/xcode/with-environment.sh\"\nREACT_NATIVE_XCODE=\"../node_modules/react-native/scripts/react-native-xcode.sh\"\n\n/bin/sh -c \"$WITH_ENVIRONMENT $REACT_NATIVE_XCODE\"\n";
		};
		077E01280D4B4AD18B2E1770 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Paave-PaaveTests/Pods-Paave-PaaveTests-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Paave-PaaveTests/Pods-Paave-PaaveTests-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Paave-PaaveTests/Pods-Paave-PaaveTests-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		3E482C27206C4DEF2FE45063 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Paave-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		4E62BDF20514810D028A5FBF /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Paave-PaaveTests/Pods-Paave-PaaveTests-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Paave-PaaveTests/Pods-Paave-PaaveTests-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Paave-PaaveTests/Pods-Paave-PaaveTests-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		5C27A227A87AF0EC821D454F /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)",
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -Ku -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | /usr/bin/head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -Ku -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    if ! python3 --version >/dev/null 2>&1; then echo \"python3 not found, firebase.json file processing error.\" && exit 1; fi\n    _JSON_OUTPUT_BASE64=$(python3 -c 'import json,sys,base64;print(base64.b64encode(bytes(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"', '\"'rb'\"').read())['${_JSON_ROOT}']), '\"'utf-8'\"')).decode())' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.app_data_collection_default_enabled\n  _APP_DATA_COLLECTION_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"app_data_collection_default_enabled\")\n  if [[ $_APP_DATA_COLLECTION_ENABLED ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseDataCollectionDefaultEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_APP_DATA_COLLECTION_ENABLED\")\")\n  fi\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.analytics_collection_deactivated\n  _ANALYTICS_DEACTIVATED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_collection_deactivated\")\n  if [[ $_ANALYTICS_DEACTIVATED ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_DEACTIVATED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_DEACTIVATED\")\")\n  fi\n\n  # config.analytics_idfv_collection_enabled\n  _ANALYTICS_IDFV_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_idfv_collection_enabled\")\n  if [[ $_ANALYTICS_IDFV_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_IDFV_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_IDFV_COLLECTION\")\")\n  fi\n\n  # config.analytics_default_allow_ad_personalization_signals\n  _ANALYTICS_PERSONALIZATION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_default_allow_ad_personalization_signals\")\n  if [[ $_ANALYTICS_PERSONALIZATION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_DEFAULT_ALLOW_AD_PERSONALIZATION_SIGNALS\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_PERSONALIZATION\")\")\n  fi\n\n  # config.analytics_registration_with_ad_network_enabled\n  _ANALYTICS_REGISTRATION_WITH_AD_NETWORK=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"google_analytics_registration_with_ad_network_enabled\")\n  if [[ $_ANALYTICS_REGISTRATION_WITH_AD_NETWORK ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GOOGLE_ANALYTICS_REGISTRATION_WITH_AD_NETWORK_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_REGISTRATION_WITH_AD_NETWORK\")\")\n  fi\n\n  # config.google_analytics_automatic_screen_reporting_enabled\n  _ANALYTICS_AUTO_SCREEN_REPORTING=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"google_analytics_automatic_screen_reporting_enabled\")\n  if [[ $_ANALYTICS_AUTO_SCREEN_REPORTING ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseAutomaticScreenReportingEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_SCREEN_REPORTING\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_collection_deactivated\n  _PERF_DEACTIVATED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_collection_deactivated\")\n  if [[ $_PERF_DEACTIVATED ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_deactivated\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_DEACTIVATED\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.in_app_messaging_auto_colllection_enabled\n  _FIAM_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"in_app_messaging_auto_collection_enabled\")\n  if [[ $_FIAM_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseInAppMessagingAutomaticDataCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_FIAM_AUTO_INIT\")\")\n  fi\n\n  # config.app_check_token_auto_refresh\n  _APP_CHECK_TOKEN_AUTO_REFRESH=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"app_check_token_auto_refresh\")\n  if [[ $_APP_CHECK_TOKEN_AUTO_REFRESH ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseAppCheckTokenAutoRefreshEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_APP_CHECK_TOKEN_AUTO_REFRESH\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		5EA39ADA2A093D9A00507564 /* Download Version and Build info */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Download Version and Build info";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Define the URL of the file to download and the destination directory where you want to save it\nVERSION_FILE_URL=\"https://paave-mobile-resource.s3.ap-southeast-1.amazonaws.com/paave_version.txt\"\nBUILD_FILE_URL=\"https://paave-mobile-resource.s3.ap-southeast-1.amazonaws.com/paave_buildno.txt\"\nDESTINATION_DIR=\"${PROJECT_DIR}/../\"\n\n# Download the file using curl\n/usr/bin/curl -L \"$VERSION_FILE_URL\" -o \"${PROJECT_DIR}/../paave_version.txt\"\n/usr/bin/curl -L \"$BUILD_FILE_URL\" -o \"${PROJECT_DIR}/../paave_buildno.txt\"\n\nwhile [ ! -f ${PROJECT_DIR}/../paave_version.txt ] && [ ! -f ${PROJECT_DIR}/../paave_buildno.txt ]; do sleep 1; done\n";
		};
		5EFA19EF288A3FC500C43EAD /* Update Version and Build Number - OneSignal */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 12;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Update Version and Build Number - OneSignal";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Set the path to PlistBuddy\nexport PLISTBUDDY=\"/usr/libexec/PlistBuddy\"\n\n# Set the paths to infoPlist and infoPlistDYSM\ninfoPlist=\"${TARGET_BUILD_DIR}/${INFOPLIST_PATH}\"\ninfoPlistDYSM=\"${TARGET_BUILD_DIR}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n \n# Function to check if a string represents a positive integer\nisuint_Case() {\n    case $1 in\n        ''|*[!0-9]*) return 1;;\n        *) return 0;;\n    esac\n}\n\n# Function to generate the final build number\ngenerate_build_number() {\n    local build_number_file=\"${PROJECT_DIR}/../paave_buildno.txt\"\n    local build_number=$(head -1 \"$build_number_file\")\n    \n    if $(isuint_Case $build_number); then\n        if [ \"$build_number\" -gt \"99\" ]\n        then\n            build_number=\"99\"\n            build_number=$build_number\n        elif [ \"$build_number\" -gt \"9\" ]\n        then\n            build_number=$build_number\n\n            case $build_number in\n            \"0\"*)\n                build_number=${build_number##*[^0]}${build_number#${build_number%%[^0]*}};;\n            esac\n        elif [ \"$build_number\" -gt \"0\" ]\n        then\n            case $build_number in\n            \"0\"*)\n                build_number=$build_number ;;\n            *)\n                build_number=\"0\"$build_number ;;\n            esac\n        else\n            build_number=\"00\"\n        fi\n    else\n        build_number=\"00\"\n    fi\n\n    local build_date=$(date \"+%y%m%d\")\n    echo \"$build_date$build_number\"\n}\n\n# Function to check if CFBundleShortVersionString and CFBundleVersion match the expected values\ncheck_plist_values() {\n    local plist_file=\"$1\"\n    local expected_version=\"$2\"\n    local expected_build=\"$3\"\n\n    local actual_version=$(\"$PLISTBUDDY\" -c \"Print :CFBundleShortVersionString\" \"$plist_file\")\n    local actual_build=$(\"$PLISTBUDDY\" -c \"Print :CFBundleVersion\" \"$plist_file\")\n\n    if [ \"$actual_version\" = \"$expected_version\" ] && [ \"$actual_build\" = \"$expected_build\" ]; then\n        return 0  # Values match\n    else\n        return 1  # Values do not match\n    fi\n}\n\nupdate_plist_values() {\n    # Run the main tasks in the background until the condition is met\n    while true; do\n        if check_plist_values \"$infoPlist\" \"$versionNumber\" \"$finalBuildNumber\"; then\n            echo \"CFBundleShortVersionString and CFBundleVersion values in infoPlist match the expected values.\"\n            break\n        else\n            # Retry setting the values\n            \"$PLISTBUDDY\" -c \"Set :CFBundleShortVersionString $versionNumber\" \"$infoPlist\"\n            \"$PLISTBUDDY\" -c \"Set :CFBundleVersion $finalBuildNumber\" \"$infoPlist\"\n            sleep 1\n        fi\n    done\n\n\n    if [ -f \"$infoPlistDYSM\" ]; then\n        # Run the main tasks in the background until the condition is met\n        while true; do\n            if check_plist_values \"$infoPlistDYSM\" \"$versionNumber\" \"$finalBuildNumber\"; then\n                echo \"CFBundleShortVersionString and CFBundleVersion values in infoPlistDYSM match the expected values.\"\n                break\n            else\n                # Retry setting the values\n                \"$PLISTBUDDY\" -c \"Set :CFBundleShortVersionString $versionNumber\" \"$infoPlistDYSM\"\n                \"$PLISTBUDDY\" -c \"Set :CFBundleVersion $finalBuildNumber\" \"$infoPlistDYSM\"\n                sleep 1\n            fi\n        done\n    fi\n}\n\n# Get version number from paave_version.txt\nversionNumber=$(head -1 \"${PROJECT_DIR}/../paave_version.txt\")\n\n# Generate the final build number\nfinalBuildNumber=$(generate_build_number)\n\n# Print version and build numbers\necho \"Version Number: $versionNumber\"\necho \"Build Number: $finalBuildNumber\"\n\nupdate_plist_values &\n";
		};
		5EFA19F0288A4D0F00C43EAD /* Update Version and Build Number */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 12;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Update Version and Build Number";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Set the path to PlistBuddy\nexport PLISTBUDDY=\"/usr/libexec/PlistBuddy\"\n\n# Set the paths to infoPlist and infoPlistDYSM\ninfoPlist=\"${TARGET_BUILD_DIR}/${INFOPLIST_PATH}\"\ninfoPlistDYSM=\"${TARGET_BUILD_DIR}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n \n# Function to check if a string represents a positive integer\nisuint_Case() {\n    case $1 in\n        ''|*[!0-9]*) return 1;;\n        *) return 0;;\n    esac\n}\n\n# Function to generate the final build number\ngenerate_build_number() {\n    local build_number_file=\"${PROJECT_DIR}/../paave_buildno.txt\"\n    local build_number=$(head -1 \"$build_number_file\")\n    \n    if $(isuint_Case $build_number); then\n        if [ \"$build_number\" -gt \"99\" ]\n        then\n            build_number=\"99\"\n            build_number=$build_number\n        elif [ \"$build_number\" -gt \"9\" ]\n        then\n            build_number=$build_number\n\n            case $build_number in\n            \"0\"*)\n                build_number=${build_number##*[^0]}${build_number#${build_number%%[^0]*}};;\n            esac\n        elif [ \"$build_number\" -gt \"0\" ]\n        then\n            case $build_number in\n            \"0\"*)\n                build_number=$build_number ;;\n            *)\n                build_number=\"0\"$build_number ;;\n            esac\n        else\n            build_number=\"00\"\n        fi\n    else\n        build_number=\"00\"\n    fi\n\n    local build_date=$(date \"+%y%m%d\")\n    echo \"$build_date$build_number\"\n}\n\n# Function to check if CFBundleShortVersionString and CFBundleVersion match the expected values\ncheck_plist_values() {\n    local plist_file=\"$1\"\n    local expected_version=\"$2\"\n    local expected_build=\"$3\"\n\n    local actual_version=$(\"$PLISTBUDDY\" -c \"Print :CFBundleShortVersionString\" \"$plist_file\")\n    local actual_build=$(\"$PLISTBUDDY\" -c \"Print :CFBundleVersion\" \"$plist_file\")\n\n    if [ \"$actual_version\" = \"$expected_version\" ] && [ \"$actual_build\" = \"$expected_build\" ]; then\n        return 0  # Values match\n    else\n        return 1  # Values do not match\n    fi\n}\n\nupdate_plist_values() {\n    # Run the main tasks in the background until the condition is met\n    while true; do\n        if check_plist_values \"$infoPlist\" \"$versionNumber\" \"$finalBuildNumber\"; then\n            echo \"CFBundleShortVersionString and CFBundleVersion values in infoPlist match the expected values.\"\n            break\n        else\n            # Retry setting the values\n            \"$PLISTBUDDY\" -c \"Set :CFBundleShortVersionString $versionNumber\" \"$infoPlist\"\n            \"$PLISTBUDDY\" -c \"Set :CFBundleVersion $finalBuildNumber\" \"$infoPlist\"\n            sleep 1\n        fi\n    done\n\n\n    if [ -f \"$infoPlistDYSM\" ]; then\n        # Run the main tasks in the background until the condition is met\n        while true; do\n            if check_plist_values \"$infoPlistDYSM\" \"$versionNumber\" \"$finalBuildNumber\"; then\n                echo \"CFBundleShortVersionString and CFBundleVersion values in infoPlistDYSM match the expected values.\"\n                break\n            else\n                # Retry setting the values\n                \"$PLISTBUDDY\" -c \"Set :CFBundleShortVersionString $versionNumber\" \"$infoPlistDYSM\"\n                \"$PLISTBUDDY\" -c \"Set :CFBundleVersion $finalBuildNumber\" \"$infoPlistDYSM\"\n                sleep 1\n            fi\n        done\n    fi\n}\n\n# Get version number from paave_version.txt\nversionNumber=$(head -1 \"${PROJECT_DIR}/../paave_version.txt\")\n\n# Generate the final build number\nfinalBuildNumber=$(generate_build_number)\n\n# Print version and build numbers\necho \"Version Number: $versionNumber\"\necho \"Build Number: $finalBuildNumber\"\n\nupdate_plist_values &\n";
		};
		6F7ED0096C674735A1007522 /* Upload Debug Symbols to Sentry */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Upload Debug Symbols to Sentry";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export SENTRY_PROPERTIES=sentry.properties\n../node_modules/@sentry/cli/bin/sentry-cli upload-dsym";
		};
		9E93097001F4F6216EA34858 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-OneSignalNotificationServiceExtension-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		A130D646172E58E1D159D8F2 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-Paave-PaaveTests-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		ADC9DDC32298B72B3CF5DC8E /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Paave/Pods-Paave-resources-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Copy Pods Resources";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Paave/Pods-Paave-resources-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Paave/Pods-Paave-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		C8AC78B0264D0F9F6F6D630E /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Paave/Pods-Paave-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-Paave/Pods-Paave-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-Paave/Pods-Paave-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		FD10A7F022414F080027D42C /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		00E356EA1AD99517003FC87E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				00E356F31AD99517003FC87E /* PaaveTests.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F871A680F5B00A75B9A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F65AA88F28CF11B200E8306A /* Counter.swift in Sources */,
				13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,
				13B07FC11A68108700A75B9A /* main.m in Sources */,
				F65AA88C28CF117500E8306A /* EkycManager.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A1DEFC3327609CF200677D6E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A1DEFC3B27609CF200677D6E /* NotificationService.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		00E356F51AD99517003FC87E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 13B07F861A680F5B00A75B9A /* Paave */;
			targetProxy = 00E356F41AD99517003FC87E /* PBXContainerItemProxy */;
		};
		A1DEFC3E27609CF200677D6E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A1DEFC3627609CF200677D6E /* OneSignalNotificationServiceExtension */;
			targetProxy = A1DEFC3D27609CF200677D6E /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		00E356F61AD99517003FC87E /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = CADC671212F091F439B36929 /* Pods-Paave-PaaveTests.debug.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				BUNDLE_LOADER = "$(TEST_HOST)";
				DEVELOPMENT_TEAM = MLA58D578T;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = arm64;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = PaaveTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				OTHER_LDFLAGS = (
					"-ObjC",
					"-lc++",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Paave.app/Paave";
			};
			name = Debug;
		};
		00E356F71AD99517003FC87E /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = E289D25A1D100E628A7ECFAA /* Pods-Paave-PaaveTests.release.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				BUNDLE_LOADER = "$(TEST_HOST)";
				COPY_PHASE_STRIP = NO;
				DEVELOPMENT_TEAM = MLA58D578T;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = arm64;
				INFOPLIST_FILE = PaaveTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				OTHER_LDFLAGS = (
					"-ObjC",
					"-lc++",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Paave.app/Paave";
			};
			name = Release;
		};
		13B07F941A680F5B00A75B9A /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 01DDC0E08F5963FADD2243CB /* Pods-Paave.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = Paave/Paave.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = MLA58D578T;
				ENABLE_BITCODE = NO;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = arm64;
				INFOPLIST_FILE = Paave/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.difisoft.paave;
				PRODUCT_NAME = Paave;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OBJC_BRIDGING_HEADER = "Paave-Bridging-Header.h";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		13B07F951A680F5B00A75B9A /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 4D8ABE15D5574A498BE323A8 /* Pods-Paave.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = Paave/Paave.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEVELOPMENT_TEAM = MLA58D578T;
				ENABLE_BITCODE = NO;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = arm64;
				INFOPLIST_FILE = Paave/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				MARKETING_VERSION = 0.0.1;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.difisoft.paave;
				PRODUCT_NAME = Paave;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OBJC_BRIDGING_HEADER = "Paave-Bridging-Header.h";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		83CBBA201A601CBA00E9B192 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "c++17";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = arm64;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/lib/swift,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"$(SDKROOT)/usr/lib/swift",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				PRESERVE_DEAD_CODE_INITS_AND_TERMS = YES;
				REACT_NATIVE_PATH = "${PODS_ROOT}/../../node_modules/react-native";
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		83CBBA211A601CBA00E9B192 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO;
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "c++17";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = arm64;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/lib/swift,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"$(SDKROOT)/usr/lib/swift",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = NO;
				PRESERVE_DEAD_CODE_INITS_AND_TERMS = YES;
				REACT_NATIVE_PATH = "${PODS_ROOT}/../../node_modules/react-native";
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		A1DEFC4127609CF200677D6E /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = D662451C30502204B58DC27C /* Pods-OneSignalNotificationServiceExtension.debug.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++17";
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CODE_SIGN_ENTITLEMENTS = OneSignalNotificationServiceExtension/OneSignalNotificationServiceExtension.entitlements;
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DEVELOPMENT_TEAM = MLA58D578T;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = arm64;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_FILE = OneSignalNotificationServiceExtension/Info.plist;
				INFOPLIST_KEY_CFBundleDisplayName = OneSignalNotificationServiceExtension;
				INFOPLIST_KEY_NSHumanReadableCopyright = "";
				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@executable_path/../../Frameworks",
				);
				MARKETING_VERSION = 0.0.1;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				PRODUCT_BUNDLE_IDENTIFIER = com.difisoft.paave.OneSignalNotificationServiceExtension;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				SWIFT_EMIT_LOC_STRINGS = YES;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
		A1DEFC4227609CF200677D6E /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 9DF5EF32B72A7DBF60467841 /* Pods-OneSignalNotificationServiceExtension.release.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++17";
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CODE_SIGN_ENTITLEMENTS = OneSignalNotificationServiceExtension/OneSignalNotificationServiceExtension.entitlements;
				CODE_SIGN_STYLE = Automatic;
				COPY_PHASE_STRIP = NO;
				CURRENT_PROJECT_VERSION = 1;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DEVELOPMENT_TEAM = MLA58D578T;
				"EXCLUDED_ARCHS[sdk=iphonesimulator*]" = arm64;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GENERATE_INFOPLIST_FILE = YES;
				INFOPLIST_FILE = OneSignalNotificationServiceExtension/Info.plist;
				INFOPLIST_KEY_CFBundleDisplayName = OneSignalNotificationServiceExtension;
				INFOPLIST_KEY_NSHumanReadableCopyright = "";
				IPHONEOS_DEPLOYMENT_TARGET = 12.4;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@executable_path/../../Frameworks",
				);
				MARKETING_VERSION = 0.0.1;
				MTL_FAST_MATH = YES;
				PRODUCT_BUNDLE_IDENTIFIER = com.difisoft.paave.OneSignalNotificationServiceExtension;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				SWIFT_EMIT_LOC_STRINGS = YES;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "PaaveTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				00E356F61AD99517003FC87E /* Debug */,
				00E356F71AD99517003FC87E /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "Paave" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				13B07F941A680F5B00A75B9A /* Debug */,
				13B07F951A680F5B00A75B9A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "Paave" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				83CBBA201A601CBA00E9B192 /* Debug */,
				83CBBA211A601CBA00E9B192 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		A1DEFC4027609CF200677D6E /* Build configuration list for PBXNativeTarget "OneSignalNotificationServiceExtension" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A1DEFC4127609CF200677D6E /* Debug */,
				A1DEFC4227609CF200677D6E /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 83CBB9F71A601CBA00E9B192 /* Project object */;
}
