// Generated by ts-to-zod
import { z } from 'zod';

const symbolTypeSchema = z.union([
  z.literal('STOCK'),
  z.literal('FUND'),
  z.literal('ETF'),
  z.literal('FUTURES'),
  z.literal('CW'),
  z.literal('BOND'),
  z.literal('INDEX'),
]);

const indexTypeSchema = z.union([z.literal('D'), z.literal('F')]);

const marketSchema = z.union([z.literal('HOSE'), z.literal('HNX'), z.literal('UPCOM')]);

const marketSymbolBaseSchema = z.object({
  symbolCode: z.string(),
  symbolType: symbolTypeSchema,
  market: marketSchema,
  vietnameseName: z.string(),
  englishName: z.string(),
  referencePrice: z.number(),
  previousClose: z.number().optional(),
});

const marketIndexSchema = marketSymbolBaseSchema.extend({
  isHighlight: z.boolean(),
  indexType: indexTypeSchema,
});

const marketStockSchema = marketSymbolBaseSchema.extend({
  ceilingPrice: z.number(),
  floorPrice: z.number(),
  listedQuantity: z.number(),
});

const marketFuturesSchema = marketSymbolBaseSchema.extend({
  underlyingCode: z.string(),
  underlyingType: symbolTypeSchema,
  firstTradingDate: z.string(),
  maturityDate: z.string(),
  ceilingPrice: z.number(),
  floorPrice: z.number(),
  listedQuantity: z.number(),
});

const marketCWSchema = marketSymbolBaseSchema.extend({
  ceilingPrice: z.number(),
  floorPrice: z.number(),
  listedQuantity: z.number(),
  underlyingCode: z.string(),
  underlyingType: symbolTypeSchema,
  issuerName: z.string(),
  exerciseRatio: z.string(),
  exercisePrice: z.number(),
  lastTradingDate: z.string(),
});

export const marketSymbolSchema = z.union([marketStockSchema, marketIndexSchema, marketCWSchema, marketFuturesSchema]);

export const marketDataSchema = z.object({
  symbolList: z.array(marketSymbolSchema),
  stockList: z.array(marketStockSchema),
  indexList: z.array(marketIndexSchema),
  cwList: z.array(marketCWSchema),
  futuresList: z.array(marketFuturesSchema),
  symbolMap: z.record(marketSymbolSchema),
  latestModified: z.string().nullable(),
});
