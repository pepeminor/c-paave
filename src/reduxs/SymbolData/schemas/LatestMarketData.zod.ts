// Generated by ts-to-zod
import { z } from 'zod';

const symbolTypeSchema = z.union([
  z.literal('STOCK'),
  z.literal('FUND'),
  z.literal('ETF'),
  z.literal('FUTURES'),
  z.literal('CW'),
  z.literal('BOND'),
  z.literal('INDEX'),
]);

const symbolSessionSchema = z.union([z.literal('ATO'), z.literal('ATC'), z.literal('CONTINUOUS')]);

const bidOfferSchema = z.object({
  price: z.number(),
  volume: z.number(),
  change: z.number().optional(),
});

const foreignDataSchema = z.object({
  buyVolume: z.number().optional(),
  sellVolume: z.number().optional(),
  currentRoom: z.number().optional(),
  totalRoom: z.number().optional(),
});

const highLowYearDataSchema = z.object({
  highPrice: z.number().optional(),
  lowPrice: z.number().optional(),
  highDate: z.string().optional(),
  lowDate: z.string().optional(),
});

export const symbolLatestSchema = z.object({
  averagePrice: z.number().optional(),
  bestBid: z.array(bidOfferSchema).optional(),
  bestOffer: z.array(bidOfferSchema).optional(),
  currentPrice: z.number(),
  changePrice: z.number(),
  foreignData: foreignDataSchema.optional(),
  highLowYear: z.array(highLowYearDataSchema).optional(),
  putThroughValue: z.number().optional(),
  putThroughVolume: z.number().optional(),
  changeRate: z.number(),
  symbolCode: z.string(),
  symbolType: symbolTypeSchema.optional(),
  tradingVolume: z.number(),
  tradingValue: z.number(),
  session: symbolSessionSchema.optional(),
  expectedPrice: z.number().optional(),
  expectedChange: z.number().optional(),
  expectedRate: z.number().optional(),
  highPrice: z.number().optional(),
  lowPrice: z.number().optional(),
  matchingVolume: z.number().optional(),
  openPrice: z.number().optional(),
  breakEven: z.number().optional(),
});
