import { AuthType } from 'constants/AuthType';
import { GENDER } from 'screens/KisEkycStep3EditPersonalInformation';
import { IAddressCityData, IAddressDistrictData } from 'screens/KisEkycStep3EditPersonalInformation/data';
import { IPersonalInfoType } from 'screens/KisEkycStep3PersonalInformation';
import { IVNPTEKYCResultAndroidConverted, IVNPTEKYCResultIOS } from 'utils';

export interface IDataEkyc {
  ekycSdkData: IVNPTEKYCResultAndroidConverted | IVNPTEKYCResultIOS;
  identifierId: string;
  phoneNumber: string;
  fullName: string;
  birthDay: Date;
  issueDate: Date;
  issuePlace: string;
  address: string;
  type: IPersonalInfoType;
  gender: GENDER;
  occupation: string;
  permanentProvince: string;
  permanentDistrict: string;
  permanentAddress: string;
  contractProvince: string;
  contractDistrict: string;
  contractAddress: string;
  backImageUrl: string;
  frontImageUrl: string;
  portraitImageUrl: string;
  email: string;
  referrerIdName: string;
  referrerBranch: string;
  bankAccount: string;
  accountName: string;
  bankName: string;
  branch: string;
  branchId: string;
  bankId: string;
  signatureImageUrl: string;
  flow: string;
  sec: AuthType;
  validateField: boolean;
  residenceAddressProvince: IAddressCityData;
  residenceAddressDistrict: IAddressDistrictData;
  residenceAddress: string;
}

export interface IDataEkycParams {
  ekycSdkData?: IVNPTEKYCResultAndroidConverted | IVNPTEKYCResultIOS;
  identifierId?: string;
  phoneNumber?: string;
  fullName?: string;
  birthDay?: Date;
  issueDate?: Date;
  issuePlace?: string;
  address?: string;
  type?: IPersonalInfoType;
  gender?: GENDER;
  occupation?: string;
  permanentProvince?: string;
  permanentDistrict?: string;
  permanentAddress?: string;
  contractProvince?: string;
  contractDistrict?: string;
  contractAddress?: string;
  backImageUrl?: string;
  frontImageUrl?: string;
  portraitImageUrl?: string;
  email?: string;
  referrerIdName?: string;
  referrerBranch?: string;
  bankAccount?: string;
  accountName?: string;
  bankName?: string;
  branch?: string;
  branchId?: string;
  bankId?: string;
  signatureImageUrl?: string;
  flow?: string;
  sec?: string;
  validateField?: boolean;
  residenceAddressProvince?: IAddressCityData;
  residenceAddressDistrict?: IAddressDistrictData;
  residenceAddress?: string;
}
